{"version":3,"sources":["pages/AuthService.js","pages/Sidebar.js","pages/Home.js","pages/NameComponent.js","pages/Login.js","pages/User.js","pages/Chat.js","pages/About.js","pages/Register.js","pages/Loading.js","pages/Post.js","pages/Profile.js","pages/EditProfile.js","pages/Search.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","username","password","axios","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","email","parse","getItem","logOut","AuthService","logout","Sidebar","useState","sidebar","setSidebar","showSidebar","className","type","onClick","to","Home","props","makeGetRequest","fetch","headers","json","setState","posts","state","user","getCurrentUser","this","timer","setInterval","console","log","clearInterval","map","key","id","src","text","Component","required","createContext","value","role","Login","handleLogin","bind","onChangeUsername","onChangePassword","loading","message","e","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","login","history","push","error","resMessage","toString","onSubmit","ref","c","htmlFor","name","onChange","validations","disabled","style","display","withRouter","Chat","setName","sendMessage","clientRef","typedMessage","method","body","responseJson","catch","messages","displayMessages","msg","TextField","label","variant","multiline","color","maxRows","event","inputProps","textAlign","width","Button","url","topics","onConnect","onDisconnect","onMessage","jobs","client","withStyles","input","About","isEmail","vusername","vpassword","Register","handleRegister","onChangeEmail","successful","register","Loading","setTimeout","get","Post","createPost","onChangePostText","onChangePostImageUrl","postText","postImageUrl","image","Profile","userinfo","bio","pictureUrl","EditProfile","onChangeBio","Search","handleSearch","onChangeSearch","search","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d259d25b.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"https://shishchat.herokuapp.com/\";\r\n\r\nclass AuthService {\r\n  login(username, password) {\r\n    return axios\r\n      .post(API_URL + \"signin\", {\r\n        username,\r\n        password\r\n      })\r\n      .then(response => {\r\n        if (response.data.accessToken) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        }\r\n\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  register(username, email, password) {\r\n    return axios.post(API_URL + \"signup\", {\r\n      username,\r\n      email,\r\n      password\r\n    });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));;\r\n  }\r\n}\r\n\r\nexport default new AuthService();","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Sidebar.css\";\r\nimport AuthService from \"./AuthService\";\r\n\r\nfunction logOut() {\r\n      AuthService.logout();\r\n}\r\n\r\nfunction Sidebar() {\r\n  const [sidebar, setSidebar] = useState(false);\r\n  const showSidebar = () => setSidebar(!sidebar);\r\n\r\n  return (\r\n    <nav className={sidebar ? \"sidebar active\" : \"sidebar\"}>\r\n      <button className=\"hamburger\" type=\"button\" onClick={showSidebar}>\r\n        <div></div>\r\n      </button>\r\n      <ul onClick={showSidebar}>\r\n        <li><Link to=\"/home\">Home</Link></li>\r\n        <li><Link to=\"/chat\">Chat</Link></li>\r\n        <li><Link to=\"/create-post\">Create ShishPost</Link></li>\r\n        <li><Link to=\"/about\">About</Link></li>\r\n        <br/><br/>\r\n        <li><Link to=\"/search-user\">User Search</Link></li>\r\n        <li><Link to=\"/profile\">User Profile</Link></li>\r\n        <li><Link to=\"/login\"><a className=\"nav-link\" onClick={logOut}>Log Out</a></Link></li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Sidebar;","import React, {Component} from \"react\";\r\nimport './Home.css';\r\nimport Sidebar from \"./Sidebar\";\r\nimport AuthService from \"./AuthService\";\r\nimport { saveAs } from \"file-saver\";\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: AuthService.getCurrentUser(),\r\n            posts: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.makeGetRequest();\r\n        this.timer = setInterval(() => {\r\n            this.makeGetRequest();\r\n            console.log(\"get request made\");\r\n        }, 30000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timer);\r\n    }\r\n\r\n    makeGetRequest = () => {\r\n        fetch('https://shishchat.herokuapp.com/getposts', {\r\n                    headers: {\r\n                        \"Content-type\": \"application/json; charset=UTF-8\"\r\n                    }\r\n                })\r\n                    .then((response) => response.json())\r\n                    .then((json) => {\r\n                        this.setState({\r\n                            posts: json\r\n                        });\r\n                    });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"top-page\">\r\n                    <Sidebar />\r\n                    <h1>Shishchat</h1>\r\n                    <h3>The top Shishir themed chatting service</h3>\r\n                </div>\r\n                <div className=\"middle\">\r\n                    <h2>Welcome {this.state.user}</h2>\r\n                    <h2>ShishPosts:</h2>\r\n                    <div className=\"post-display\">\r\n                            {this.state.posts.map((posts) => (\r\n                                <div className='posts' key={posts.id}>\r\n                                        <p id=\"user\">{posts.user}</p>\r\n                                        <img src=\"graduated-shishir.jpg\" id=\"shishir-approved-photo\"></img>\r\n                                        <p id=\"shishir-approved-text\">Shishir Approved</p>\r\n                                        <p id=\"text\">{posts.text}</p>\r\n                                </div>\r\n                            ))}\r\n                    </div>\r\n                </div>\r\n                <p id=\"secret\">Secret Message!</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, {Component} from 'react';\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\n\nclass NameComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: true,\n            name: null\n        }\n    }\n\n    handleClickOpen = () => {\n        this.setState({open: true});\n    };\n\n    handleClose = () => {\n        this.setState({open: false});\n    };\n\n    save = () => {\n        this.setState({open: false});\n        this.props.setName(this.state.name);\n    };\n\n    setEnteredName = (event) => {\n        this.setState({name: event.target.value});\n    };\n\n    render() {\n        return (\n            <div>\n                <Dialog open={this.state.open} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Chat</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Please enter your name\n                        </DialogContentText>\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"name\"\n                            label=\"Name\"\n                            type=\"name\" onChange={this.setEnteredName}\n                            fullWidth\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.save} color=\"primary\">\n                            Save\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n\nexport default NameComponent;\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport './Login.css';\r\nimport UserContext from './User';\r\nimport Chat from './Chat';\r\nimport Home from './Home';\r\n\r\nimport AuthService from \"./AuthService\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nlet user = {\r\n    name: \"\"\r\n};\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      loading: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    });\r\n    return this.state.username;\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      loading: true\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.login(this.state.username, this.state.password).then(\r\n        () => {\r\n            console.log(\"Login Works\");\r\n            localStorage.setItem(\"user\", JSON.stringify(this.state.username));\r\n            this.props.history.push(\"/profile\");\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            loading: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"top\">\r\n            <h1>Shishchat</h1>\r\n            <h3>The top Shishir themed chatting service</h3>\r\n        </div>\r\n        <h2>Login</h2>\r\n        <div className=\"card card-container\">\r\n          <Form\r\n            onSubmit={this.handleLogin}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            <div className=\"form-group-username\">\r\n              <label htmlFor=\"username\">Username</label>\r\n              <Input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"username\"\r\n                value={this.state.username}\r\n                onChange={this.onChangeUsername}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group-password\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <Input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.onChangePassword}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group-buttons\">\r\n                    <button\r\n                        className=\"btn btn-primary btn-block\"\r\n                        disabled={this.state.loading}\r\n                    >\r\n                    {this.state.loading && (\r\n                        <span className=\"spinner-border spinner-border-sm\"></span>\r\n                    )}\r\n                        <span>Login</span>\r\n                    </button>\r\n                <Link to=\"/signup\">\r\n                    <button className=\"btn btn-primary btn-block\"><span>Sign Up</span></button>\r\n                </Link>\r\n            </div>\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);","import { createContext } from 'react';\r\n\r\nconst UserContext = createContext();\r\n\r\nexport default UserContext;","import React, {Component, useContext, useEffect, useRef} from 'react';\r\nimport SockJsClient from 'react-stomp';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport './MessageStyle.css';\r\nimport NameComponent from \"./NameComponent\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Login from \"./Login\";\r\nimport AuthService from \"./AuthService\";\r\nimport User from \"./User\";\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\n\r\nconst styles = {\r\n      input: {\r\n        color: \"white\"\r\n      }\r\n};\r\n\r\nclass Chat extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            messages: [],\r\n            typedMessage: \"\",\r\n            name: \"\"\r\n        }\r\n    }\r\n\r\n    setName = () => {\r\n        const user = AuthService.getCurrentUser();\r\n\r\n        if (user) {\r\n            this.setState({\r\n                name: user\r\n            });\r\n        }\r\n    };\r\n\r\n    sendMessage = () => {\r\n        this.clientRef.sendMessage('/app/user-all', JSON.stringify({\r\n            name: this.state.name,\r\n            message: this.state.typedMessage\r\n        }));\r\n        fetch('https://shishchat.herokuapp.com/addmessage', {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify({\r\n                        username: this.state.name,\r\n                        message: this.state.typedMessage\r\n                    })\r\n                })\r\n                .then((response) => response.json())\r\n                   .then((responseJson) => {\r\n                     console.log(responseJson);\r\n                   })\r\n                   .catch((error) => {\r\n                     console.error(error);\r\n                   })\r\n                .then(() => {\r\n                    fetch('https://shishchat.herokuapp.com/getmessages', {\r\n                        headers: {\r\n                            \"Content-type\": \"application/json; charset=UTF-8\"\r\n                        }\r\n                    })\r\n                    .then((response) => response.json())\r\n                    .then((json) => {\r\n                        this.setState({\r\n                            messages: json\r\n                        });\r\n                    });\r\n                });\r\n        this.setState({typedMessage: \"\"});\r\n    };\r\n\r\n    componentDidMount() {\r\n        fetch('https://shishchat.herokuapp.com/getmessages', {\r\n                    headers: {\r\n                        \"Content-type\": \"application/json; charset=UTF-8\"\r\n                    }\r\n                })\r\n                    .then((response) => response.json())\r\n                    .then((json) => {\r\n                        this.setState({\r\n                            messages: json\r\n                        });\r\n                    });\r\n        console.log(this.state.messages);\r\n    }\r\n\r\n    displayMessages = () => {\r\n        return (\r\n            <div>\r\n                    {this.state.messages.map(msg => {\r\n                        return (\r\n                            <div key={msg.id}>\r\n                                {this.state.name == msg.username ?\r\n                                    <div>\r\n                                        <p className=\"title1\"><b>{msg.username}:</b></p><br/>\r\n                                        <p id=\"actualText\">{msg.message}</p>\r\n                                    </div> :\r\n                                    <div>\r\n                                        <p className=\"title2\"><b>{msg.username}:</b></p><br/>\r\n                                        <p id=\"actualText\">{msg.message}</p>\r\n                                    </div>\r\n                                }\r\n                            </div>)\r\n                    })}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return (\r\n                <div>\r\n                    <Sidebar />\r\n                    <div className=\"top\">\r\n                        <h1>Shishchat</h1>\r\n                        <h3>The top Shishir themed chatting service</h3>\r\n                    </div>\r\n                    <br/>\r\n                    <div className=\"align-center\">\r\n                        User: <p className=\"title1\"> {this.state.name}</p>\r\n                        <br/><br/>\r\n                    </div>\r\n                    <div className=\"messages\">\r\n                        {this.displayMessages()}\r\n                    </div>\r\n                    <br/><br/>\r\n                    <div className=\"align-center\">\r\n                                        <br/><br/>\r\n                                        <table>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    <TextField id=\"outlined-basic\" label=\"Enter Message to Send\" variant=\"outlined\"\r\n                                                               value={this.state.typedMessage}\r\n                                                               multiline\r\n                                                               color=\"white\"\r\n                                                               maxRows={6}\r\n                                                               onChange={(event) => {\r\n                                                                   this.setState({typedMessage: event.target.value});\r\n                                                               }}\r\n                                                               inputProps={{\r\n                                                                   style: { textAlign: 'left', width: 650 }\r\n                                                               }}\r\n                                                               />\r\n                                                </td>\r\n                                                <td>\r\n                                                    <Button variant=\"contained\" color=\"primary\"\r\n                                                            onClick={this.sendMessage}>Send</Button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        </table>\r\n                                    </div>\r\n                    <SockJsClient url='https://shishchat.herokuapp.com/websocket-chat'\r\n                                  topics={['/topic/user']}\r\n                                  onConnect={() => {\r\n                                      console.log(\"connected\");\r\n                                      this.setName();\r\n                                  }}\r\n                                  onDisconnect={() => {\r\n                                      console.log(\"Disconnected\");\r\n                                  }}\r\n                                  onMessage={(msg) => {\r\n                                      var jobs = this.state.messages;\r\n                                      jobs.push(msg);\r\n                                      this.setState({messages: jobs});\r\n                                      console.log(this.state);\r\n                                  }}\r\n                                  ref={(client) => {\r\n                                      this.clientRef = client\r\n                                  }}/>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Chat);","import React from \"react\";\r\nimport './About.css';\r\nimport Sidebar from \"./Sidebar\";\r\n\r\nfunction About() {\r\n  return (\r\n    <div>\r\n        <Sidebar />\r\n        <div className=\"page\">\r\n            <h1>Shishchat</h1>\r\n            <h3>The top Shishir themed chatting service</h3>\r\n        </div>\r\n        <div className=\"meet-shishir\">\r\n            <p><b>Meet Shishir</b></p>\r\n            <img src=\"Shishir.jpeg\"></img>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"./Register.css\";\r\n\r\nimport AuthService from \"./AuthService\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst email = value => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = value => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The username must be between 3 and 20 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = value => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      successful: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      successful: false\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.register(\r\n        this.state.username,\r\n        this.state.email,\r\n        this.state.password\r\n      ).then(\r\n        response => {\r\n          this.setState({\r\n            message: response.data.message,\r\n            successful: true\r\n          });\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            successful: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n      this.props.history.push('/login');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n          <div className=\"top\">\r\n            <h1>Shishchat</h1>\r\n                <h3>The top Shishir themed chatting service</h3>\r\n            </div>\r\n          <h2>Sign Up</h2>\r\n          <div className=\"card card-container\">\r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <div className=\"form-group-username\">\r\n                  <label htmlFor=\"username\">Username</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChangeUsername}\r\n                    validations={[required, vusername]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group-email\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    validations={[required, email]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group-password\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChangePassword}\r\n                    validations={[required, vpassword]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group-button\">\r\n                        <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div\r\n                  className={\r\n                    this.state.successful\r\n                      ? \"alert alert-success\"\r\n                      : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Register);","import React, {Component} from 'react';\r\nimport axios from \"axios\";\r\nimport \"./Loading.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass Loading extends Component {\r\n    state = {\r\n        loading: true,\r\n        message: \"\"\r\n    }\r\n\r\n    loading = event => {\r\n        setTimeout(() => {\r\n             axios.get('https://shishchat.herokuapp.com/loading')\r\n                         .then(response => this.setState({loading: false, message: response}));\r\n             if (this.state.loading == false) {\r\n                this.props.history.push(\"/login\");\r\n             }\r\n        }, 2000);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Please enjoy this complimentary photo of Shishir while the web application loads</h3>\r\n                <div className=\"container\">\r\n                    <div className=\"loading-spinner\"></div>\r\n                </div>\r\n                <img src=\"Shishir.jpeg\"></img>\r\n                {this.loading()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Loading);","import React, {Component} from \"react\";\r\nimport './Post.css';\r\nimport Sidebar from \"./Sidebar\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport AuthService from \"./AuthService\";\r\n\r\nclass Post extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.createPost = this.createPost.bind(this);\r\n        this.onChangePostText = this.onChangePostText.bind(this);\r\n        this.onChangePostImageUrl = this.onChangePostImageUrl.bind(this);\r\n\r\n        this.state = {\r\n            user: AuthService.getCurrentUser(),\r\n            postText: \"\",\r\n            postImageUrl: \"\"\r\n        }\r\n    }\r\n\r\n      onChangePostText(e) {\r\n        this.setState({\r\n          postText: e.target.value\r\n        });\r\n      }\r\n\r\n      onChangePostImageUrl(e) {\r\n        this.setState({\r\n          postImageUrl: e.target.value\r\n        });\r\n      }\r\n\r\n    createPost(e) {\r\n        e.preventDefault();\r\n        this.form.validateAll();\r\n\r\n        let username = this.state.user;\r\n        let postText = this.state.postText;\r\n        let postImageUrl = this.state.postImageUrl;\r\n\r\n        fetch('https://shishchat.herokuapp.com/createpost', {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                user: username,\r\n                text: postText,\r\n                image: \"\"\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n           .then((responseJson) => {\r\n             console.log(responseJson);\r\n           })\r\n           .catch((error) => {\r\n             console.error(error);\r\n           });\r\n\r\n        this.setState({\r\n            postText: \"\",\r\n            postImageUrl: \"\"\r\n        });\r\n        return console.log(\"Another post confirmation!\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"top-page\">\r\n                    <Sidebar />\r\n                    <h1>Shishchat</h1>\r\n                    <h3>The top Shishir themed chatting service</h3>\r\n                </div>\r\n                <div className=\"middle\">\r\n                    <h2>Create ShishPost</h2>\r\n                    <Form\r\n                                onSubmit={this.createPost}\r\n                                ref={c => {\r\n                                    this.form = c;\r\n                                }}\r\n                              >\r\n                                  <div>\r\n                                    <div className=\"form-group-text\">\r\n                                      <label htmlFor=\"posttext\">Post Text</label>\r\n                                      <Input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        name=\"text\"\r\n                                        value={this.state.postText}\r\n                                        onChange={this.onChangePostText}\r\n                                      />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group-button\">\r\n                                            <button className=\"btn btn-primary btn-block\">Create Post</button>\r\n                                    </div>\r\n                                  </div>\r\n\r\n                                <CheckButton\r\n                                  style={{ display: \"none\" }}\r\n                                  ref={c => {\r\n                                    this.checkBtn = c;\r\n                                  }}\r\n                                />\r\n                              </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Post;","import React, {Component} from \"react\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport AuthService from \"./AuthService\";\r\nimport './Profile.css';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Profile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: AuthService.getCurrentUser(),\r\n            userinfo: {},\r\n            posts: []\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://shishchat.herokuapp.com/getprofile/' + this.state.user, {\r\n                    headers: {\r\n                            \"Content-type\": \"application/json; charset=UTF-8\"\r\n                    }\r\n                })\r\n                .then((response) => response.json())\r\n                .then((json) => {\r\n                    this.setState({\r\n                        userinfo: json\r\n                    });\r\n                });\r\n\r\n        fetch('https://shishchat.herokuapp.com/createprofile/' + this.state.user, {\r\n                                method: \"post\",\r\n                                headers: {\r\n                                    \"Content-Type\": \"application/json\"\r\n                                },\r\n                                body: JSON.stringify({\r\n                                    username: this.state.user,\r\n                                    bio: \"\",\r\n                                    pictureUrl: \"\"\r\n                                })\r\n                            })\r\n                            .then((response) => response.json())\r\n                            .then((responseJson) => {\r\n                                 console.log(responseJson);\r\n                            })\r\n                            .catch((error) => {\r\n                                console.error(error);\r\n                            })\r\n                            .then(() => {\r\n                                fetch('https://shishchat.herokuapp.com/getprofile/' + this.state.user, {\r\n                                    headers: {\r\n                                        \"Content-type\": \"application/json; charset=UTF-8\"\r\n                                    }\r\n                                })\r\n                                .then((response) => response.json())\r\n                                .then((json) => {\r\n                                    this.setState({\r\n                                        userinfo: json\r\n                                    });\r\n                                });\r\n                            });\r\n\r\n        fetch('https://shishchat.herokuapp.com/getposts/' + this.state.user, {\r\n                            headers: {\r\n                                \"Content-type\": \"application/json; charset=UTF-8\"\r\n                            }\r\n                        })\r\n                            .then((response) => response.json())\r\n                            .then((json) => {\r\n                                this.setState({\r\n                                    posts: json\r\n                                });\r\n                            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"top-page\">\r\n                    <Sidebar />\r\n                    <h1>Shishchat</h1>\r\n                    <h3>The top Shishir themed chatting service</h3>\r\n                </div>\r\n                <div className=\"body\">\r\n                            <h1>{this.state.userinfo.username}</h1>\r\n                            <Link to=\"/edit-profile\">\r\n                                <button className=\"btn btn-primary btn-block\"><span>Edit Profile</span></button>\r\n                            </Link>\r\n                            <h2>Bio</h2>\r\n                            <div className=\"bio\">\r\n                                <p>{this.state.userinfo.bio}</p>\r\n                            </div>\r\n                    <h2>User Posts</h2>\r\n                    <div className=\"post-display\">\r\n                        {this.state.posts.map((posts) => (\r\n                            <div className='posts' key={posts.id}>\r\n                                <p id=\"user\">{posts.user}</p>\r\n                                <img src=\"graduated-shishir.jpg\" id=\"shishir-approved-photo\"></img>\r\n                                <p id=\"shishir-approved-text\">Shishir Approved</p>\r\n                                <p id=\"text\">{posts.text}</p>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <p id=\"secret\">Secret Message!</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Profile;","import React, {Component} from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport AuthService from \"./AuthService\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport './EditProfile.css';\r\n\r\nclass EditProfile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleRegister = this.handleRegister.bind(this);\r\n        this.onChangeBio = this.onChangeBio.bind(this);\r\n\r\n        this.state = {\r\n          username: AuthService.getCurrentUser(),\r\n          bio: \"\",\r\n          image: \"\"\r\n        };\r\n      }\r\n\r\n      onChangeBio(e) {\r\n        this.setState({\r\n          bio: e.target.value\r\n        });\r\n      }\r\n\r\n      handleRegister(e) {\r\n          e.preventDefault();\r\n\r\n          this.form.validateAll();\r\n\r\n          if (this.checkBtn.context._errors.length === 0) {\r\n            fetch('https://shishchat.herokuapp.com/editprofile/' + this.state.username, {\r\n                        method: \"put\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify({\r\n                            username: this.state.username,\r\n                            bio: this.state.bio,\r\n                            pictureUrl: this.state.image\r\n                        })\r\n                    })\r\n                    .then((response) => response.json())\r\n                       .then((responseJson) => {\r\n                         console.log(responseJson);\r\n                       })\r\n                       .catch((error) => {\r\n                         console.error(error);\r\n                       });\r\n              }\r\n            this.props.history.push('/profile');\r\n          }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"top\">\r\n                    <Sidebar />\r\n                    <h1>Shishchat</h1>\r\n                    <h3>The top Shishir themed chatting service</h3>\r\n                </div>\r\n                <div className=\"card card-container\">\r\n                          <Form\r\n                            onSubmit={this.handleRegister}\r\n                            ref={c => {\r\n                              this.form = c;\r\n                            }}\r\n                          >\r\n                            {!this.state.successful && (\r\n                              <div>\r\n                                <div className=\"form-group-bio\">\r\n                                  <label htmlFor=\"bio\">Bio</label>\r\n                                  <Input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"bio\"\r\n                                    value={this.state.bio}\r\n                                    onChange={this.onChangeBio}\r\n                                  />\r\n                                </div>\r\n\r\n                                <div className=\"form-group-button\">\r\n                                        <button className=\"btn btn-primary btn-block\">Save Changes</button>\r\n                                </div>\r\n                              </div>\r\n                            )}\r\n                            <CheckButton\r\n                              style={{ display: \"none\" }}\r\n                              ref={c => {\r\n                                this.checkBtn = c;\r\n                              }}\r\n                            />\r\n                          </Form>\r\n                    </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditProfile;","import React, {Component} from \"react\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport AuthService from \"./AuthService\";\r\nimport './Search.css';\r\n\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n        this.onChangeSearch = this.onChangeSearch.bind(this);\r\n\r\n        this.state = {\r\n            userinfo: {},\r\n            posts: [],\r\n            search: \"\"\r\n        }\r\n    }\r\n\r\n    onChangeSearch(e) {\r\n        this.setState({\r\n            search: e.target.value\r\n        });\r\n    }\r\n\r\n    handleSearch(e) {\r\n        e.preventDefault();\r\n\r\n        this.form.validateAll();\r\n\r\n        if (this.checkBtn.context._errors.length === 0) {\r\n            fetch('https://shishchat.herokuapp.com/getprofile/' + this.state.search, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            })\r\n            .then((response) => response.json())\r\n            .then((json) => {\r\n                this.setState({\r\n                    userinfo: json\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n            });\r\n\r\n            fetch('https://shishchat.herokuapp.com/getposts/' + this.state.search, {\r\n                headers: {\r\n                    \"Content-type\": \"application/json; charset=UTF-8\"\r\n                }\r\n            })\r\n            .then((response) => response.json())\r\n            .then((json) => {\r\n                this.setState({\r\n                    posts: json\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n            return (\r\n                <div>\r\n                    <div className=\"top-page\">\r\n                        <Sidebar />\r\n                        <h1>Shishchat</h1>\r\n                        <h3>The top Shishir themed chatting service</h3>\r\n                    </div>\r\n                    <div className=\"body\">\r\n                        <Form\r\n                            onSubmit={this.handleSearch}\r\n                                ref={c => {\r\n                                this.form = c;\r\n                            }}\r\n                        >\r\n                            {!this.state.successful && (\r\n                                <div>\r\n                                    <div className=\"form-group-search\">\r\n                                        <br></br>\r\n                                        <label htmlFor=\"search\">Search User</label>\r\n                                            <Input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"search\"\r\n                                                value={this.state.search}\r\n                                                onChange={this.onChangeSearch}\r\n                                            />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group-button\">\r\n                                        <button className=\"btn btn-primary btn-block\">Search</button>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                            <CheckButton\r\n                                style={{ display: \"none\" }}\r\n                                ref={c => {\r\n                                    this.checkBtn = c;\r\n                                }}\r\n                            />\r\n                        </Form>\r\n\r\n                        <h1>{this.state.userinfo.username}</h1>\r\n                        <h2>Bio</h2>\r\n                        <div className=\"bio\">\r\n                            <p>{this.state.userinfo.bio}</p>\r\n                        </div>\r\n                        <h2>User Posts</h2>\r\n                        <div className=\"post-display\">\r\n                            {this.state.posts.map((posts) => (\r\n                                <div className='posts' key={posts.id}>\r\n                                    <p id=\"user\">{posts.user}</p>\r\n                                    <img src=\"graduated-shishir.jpg\" id=\"shishir-approved-photo\"></img>\r\n                                    <p id=\"shishir-approved-text\">Shishir Approved</p>\r\n                                    <p id=\"text\">{posts.text}</p>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        <p id=\"secret\">Secret Message!</p>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n}\r\n\r\nexport default Search;","import React, {Component} from 'react';\nimport './App.css';\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Chat from \"./pages/Chat\";\nimport About from \"./pages/About\";\nimport Sidebar from \"./pages/Sidebar\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport AuthService from \"./pages/AuthService\";\nimport User from \"./pages/User\";\nimport Loading from \"./pages/Loading\";\nimport Post from \"./pages/Post\";\nimport Profile from \"./pages/Profile\";\nimport EditProfile from \"./pages/EditProfile\";\nimport Search from \"./pages/Search\";\n\nclass App extends Component {\n    render() {\n        return (\n                  <Router>\n                    <Switch>\n                      <Route path=\"/\" exact component={Loading}/>\n                      <Route path=\"/login\" component={Login} />\n                      <Route path=\"/signup\" component={Register} />\n                      <Route path=\"/home\" component={Home} />\n                      <Route path=\"/chat\" component={Chat} />\n                      <Route path=\"/about\" component={About} />\n                      <Route path=\"/create-post\" component={Post} />\n                      <Route path=\"/profile\" component={Profile} />\n                      <Route path=\"/search-user\" component={Search} />\n                      <Route path=\"/edit-profile\" component={EditProfile} />\n                    </Switch>\n                  </Router>\n        )\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}